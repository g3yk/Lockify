name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    outputs:
      execution_time: ${{ steps.time.outputs.execution_time }}  # Store execution time for future use

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Start time measurement
        id: time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV  # Record start time

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

      - name: End time measurement and calculate execution time
        id: end_time
        run: |
          end_time=$(date +%s)
          execution_time=$((end_time - ${{ env.start_time }}))
          echo "Execution time for scan_ruby: $execution_time seconds"
          echo "::set-output name=execution_time::$execution_time"  # Store execution time as output

  scan_js:
    runs-on: ubuntu-latest
    outputs:
      execution_time: ${{ steps.time.outputs.execution_time }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Start time measurement
        id: time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV  # Record start time

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

      - name: End time measurement and calculate execution time
        id: end_time
        run: |
          end_time=$(date +%s)
          execution_time=$((end_time - ${{ env.start_time }}))
          echo "Execution time for scan_js: $execution_time seconds"
          echo "::set-output name=execution_time::$execution_time"

  lint:
    runs-on: ubuntu-latest
    outputs:
      execution_time: ${{ steps.time.outputs.execution_time }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Start time measurement
        id: time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV  # Record start time

      - name: Lint code for consistent style
        run: bin/rubocop -f github

      - name: End time measurement and calculate execution time
        id: end_time
        run: |
          end_time=$(date +%s)
          execution_time=$((end_time - ${{ env.start_time }}))
          echo "Execution time for lint: $execution_time seconds"
          echo "::set-output name=execution_time::$execution_time"

  test:
    runs-on: ubuntu-latest
    outputs:
      execution_time: ${{ steps.time.outputs.execution_time }}

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Start time measurement
        id: time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV  # Record start time

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bin/rails db:test:prepare test test:system

      - name: End time measurement and calculate execution time
        id: end_time
        run: |
          end_time=$(date +%s)
          execution_time=$((end_time - ${{ env.start_time }}))
          echo "Execution time for test: $execution_time seconds"
          echo "::set-output name=execution_time::$execution_time"

  report:
    runs-on: ubuntu-latest
    needs: [scan_ruby, scan_js, lint, test]  # Ensure all jobs finish first

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display total execution time
        run: |
          echo "Scan Ruby Execution Time: ${{ needs.scan_ruby.outputs.execution_time }} seconds"
          echo "Scan JS Execution Time: ${{ needs.scan_js.outputs.execution_time }} seconds"
          echo "Lint Execution Time: ${{ needs.lint.outputs.execution_time }} seconds"
          echo "Test Execution Time: ${{ needs.test.outputs.execution_time }} seconds"

          # Calculate and display the average execution time
          total_time=$(( ${needs.scan_ruby.outputs.execution_time} + ${needs.scan_js.outputs.execution_time} + ${needs.lint.outputs.execution_time} + ${needs.test.outputs.execution_time} ))
          average_time=$(( total_time / 4 ))
          echo "Average Execution Time: $average_time seconds"

